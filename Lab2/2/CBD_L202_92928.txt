// NMEC: 92928

// Nos find() para aparecerem de forma mais 'readable' fazer '.pretty()' no final

#1
db.rest.find()

#2
db.rest.find({}, { restaurant_id: true, nome: 1, localidade: 1, gastronomia: 1 })

#3
db.rest.find({}, { restaurant_id: true, nome: 1, localidade: 1, address: {zipcode: 1}, _id: false })

#4
db.rest.count( { localidade: "Bronx" } )

#5
db.rest.find({ localidade:"Bronx" } ).limit(15)

#6
db.rest.find({ grades: { $elemMatch: {score:{ $gt:85 } } } })

#7
db.rest.find({ grades: { $elemMatch: {score:{ $gt:80, $lt: 100 } } } })

#8
db.rest.find( { "address.coord.0": { $lt: -95.7 } } )

#9
db.rest.find( { "address.coord.0": { $lt: -65 }, gastronomia: { $ne: "American" }, grades: { $elemMatch: { score: { $gt: 70 } } } } )

#10
db.rest.find( { nome: { $regex: /^Wil/} }, {restaurant_id:1, nome:1, localidade:1, gastronomia:1, _id:false} )
OU
db.rest.find( { nome: /^Wil/ }, {restaurant_id:1, nome:1, localidade:1, gastronomia:1, _id:false} )

#11
db.rest.find( {localidade: "Bronx", gastronomia: {$in: ["American", "Chinese"]}}, {nome:1, localidade:1, gastronomia:1, _id:false} )

#12
db.rest.find( {localidade: { $in: ["Saten Island", "Queens", "Brooklyn"] } }, {restaurant_id: 1, nome:1, localidade:1, gastronomia:1, _id:false} )

#13
db.rest.find( {grades: { $not: { "$elemMatch" : { score: { $gt: 3} } } }}, {nome:1, localidade:1, "grades.score":1 , gastronomia:1, _id:false} )
                                   
#14
db.rest.find( {grades: { $elemMatch: { grade: "A", score: 10, date: ISODate("2014-08-11T00:00:00Z") } } }, {"grades.grade": 1, nome: 1, _id:0 } )

#15
db.rest.find( { "grades.1.grade": "A", "grades.1.date": ISODate("2014-08-11T00:00:00Z") }, {"grades.score": 1, nome: 1, _id:0, restaurant_id:1 } )

#16
db.rest.find( { "address.coord.1": { $gt: 42, $lte: 52 } }, { restarant_id:1, _id:0, nome:1, address:1 } )

#17
db.rest.find( {}, { _id:0, nome:1, gastronomia:1, localidade:1 } ).sort({gastronomia:1, localidade:-1})

#18
db.rest.find( { gastronomia: { $ne:"American"}, localidade:"Brooklyn", "grades.grade":"A" }, { _id:0, nome:1, gastronomia:1, localidade:1, "grades.grade":1 } ).sort({gastronomia:-1})

#19
db.rest.aggregate( [ { $group:{_id:"$localidade",Total:{$sum:1}} } ] )

#20
db.rest.aggregate( [ { $project: { scoreAvg: { $avg: "$grades.score" } } }, { $match: { scoreAvg: { $gt: 30 } } } ] )

#21
db.rest.aggregate( [ { $project: {_id:"$nome", gastronomia:"$gastronomia", coords: "$address.coord", sum:{$sum:"$grades.score"}}}, {$match:{sum:{$gt:75}, gastronomia:"American", "coords.0":{$lt:-60}}}])

#22
db.rest.aggregate( [ { $group: { _id: "$gastronomia", Total: { $sum: 1} } }, { $sort:{'Total':-1} } ] )

#23
db.rest.distinct("gastronomia", {"address.rua":"Flatbush Avenue"})

#24
db.rest.aggregate( [ { $group: { _id: "$address.rua", Total: { $sum: 1} } }, { $sort:{'Total':-1} } ] )

#25 Mostrar quantos restaurantes que existem por localidade e gastronomia
db.rest.aggregate([ { "$group": { "_id": {"loc": "$localidade", "gas": "$gastronomia"}, "Total": { "$sum": 1} } } ])

#26 Ordenar o #25 por numero descendente de restaurantes
db.rest.aggregate([ { "$group": { "_id": {"loc": "$localidade", "gas": "$gastronomia"}, "Total": { "$sum": 1} } }, { $sort:{'Total':-1} } ])

#27 Gastronomia mais comum
db.rest.aggregate([{$group : { _id : '$gastronomia', no_restaurants : {$sum : 1}}}, {$sort: {no_restaurants: -1}}, {$limit: 1}])

#28 Quantos restaurantes tÃªm 'the' (case insensitive) no nome
db.rest.find({"nome": {$regex:"the", $options:"$i"}})

#29 Quantidade de restaurantes de gastronomia "American" na localidade "Brooklyn"
db.rest.count({gastronomia:"American", localidade: "Brooklyn"})



